{"version":3,"sources":["components/Page.tsx","components/Navigation/Navigation.tsx","services/environment.ts","services/base.api.ts","services/error.api.ts","services/products.api.ts","CartContext.tsx","services/baskets.api.ts","components/LazyLoadImage.tsx","components/ProductItem/ProductItem.tsx","components/ProductList/ProductList.tsx","ProductsContext.tsx","pages/Products.tsx","components/ProductCartItem/ProductCartItem.tsx","components/ProductCartList/ProductCartList.tsx","components/CheckoutButton/CheckoutButton.tsx","components/Cart/Cart.tsx","pages/ShoppingCart.tsx","CartProvider.tsx","services/search.api.ts","ProductsProvider.tsx","AppRouter.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Page","props","useEffect","document","title","rest","Navigation","className","href","target","rel","to","type","placeholder","aria-label","isDevelopment","window","location","hostname","BaseApi","api","error","console","PRODUCTS_API_URL","productId","this","path","options","url","log","Promise","resolve","setTimeout","includes","split","productAvailability","mockAvailabilities","find","product","id","mockProducts","Math","random","fetch","then","response","json","catch","errorService","reportError","CartContext","React","createContext","cart","setCart","BASKETS_API_URL","basketId","localStorage","getItem","create","method","setItem","removeItem","parameters","body","JSON","stringify","products","basketString","storedBasket","parse","shipmentList","shipmentId","shipmentType","productLineItemList","forEach","productToAdd","a","sku","productsApi","get","productTotal","pricing_information","currentPrice","quantity","checkAvailability","availabilityProduct","variation_list","variation","availability","size","productLineItem","productName","name","view_list","image_url","attribute_list","gender","color","product_type","toUpperCase","push","pricing","total","pathArray","length","shipmentElement","index","price","basketTotal","splice","max","mockEmptyBasket","LazyLoadImage","element","useRef","IntersectionObserver","entries","observer","entry","isIntersecting","current","src","dataset","disconnect","observe","alt","data-src","ref","ProductItem","useContext","useState","setPrice","availability_status","selectedElement","maxQuantity","setAvailability","isSubscribed","validateFields","displayName","image","loading","division","replace","onSubmit","event","preventDefault","basketsApi","getId","addProduct","onChange","Number","value","prevState","required","map","disabled","key","min","ProductList","ProductsContext","setProducts","Products","ProductCartItem","availableStock","productImage","toFixed","removeProduct","ProductCartList","CheckoutButton","onClick","buttonClickHandler","Cart","delete","currency","ShoppingCart","CartProvider","Provider","children","SEARCH_API_URL","mockTaxonomyJson","mockProductJson","res","ProductsProvider","searchApi","getProducts","itemList","items","AppRouter","component","App","Boolean","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5401922a.chunk.js","sourcesContent":["import React, { FunctionComponent, useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport IPageProps from '../interfaces/PageProps';\n\nconst Page: FunctionComponent<IPageProps> = props => {\n  useEffect(() => {\n    document.title = `Adidas |  ${props.title}`;\n  });\n\n  const { title, ...rest } = props;\n  return <Route {...rest} />;\n};\n\nexport default Page;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navigation.scss';\n\nfunction Navigation() {\n  return (\n    <header>\n      <nav className=\"navigation\">\n        <div className=\"navigation__top-bar\">\n          <div className=\"navigation__top-bar__elements\">\n            <a href=\"https://www.adidas.com/us/help\" className=\"right-separation\" target=\"_blank\" rel=\"noopener noreferrer\">HELP </a>\n            <a href=\"https://www.adidas.com/us/order-tracker\" target=\"_blank\" rel=\"noopener noreferrer\">ORDER TRACKER AND RETURNS </a>\n            <button className=\"button\">JOIN CREATORS CLUB </button>\n            <a href=\"https://www.adidas.com/us/creatorsclub\" target=\"_blank\" rel=\"noopener noreferrer\">CREATORS CLUB </a>\n            <a href=\"https://www.adidas.com/us/account-login\" target=\"_blank\" rel=\"noopener noreferrer\">LOG IN</a>\n          </div>\n        </div>\n        <div className=\"navigation__navbar\">\n          <div className=\"navigation__navbar__collapse\">\n            <ul className=\"navigation__navbar__list\">\n              <li className=\"navigation__navbar__item\">\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li className=\"navigation__navbar__item\">\n                <Link to=\"/cart\">Cart</Link>\n              </li>\n            </ul>\n\n            <form className=\"form--search\">\n              <input className=\"form-control\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n            </form>\n          </div>\n        </div>\n      </nav>\n    </header>\n  );\n}\n\nexport default Navigation;\n","export const isDevelopment = () => {\n  if (window?.location?.hostname === 'localhost') {\n    return true;\n  }\n\n  // TODO: Change to false when CORS issue get solved\n  return true;\n}\n","export default abstract class BaseApi {\n  constructor(protected api: (path?: string, options?: RequestInit) => Promise<any>) {}\n}\n","class ErrorService {\n  reportError(error: Error) {\n    console.error(error);\n  }\n}\n\nexport default new ErrorService();\n","import { isDevelopment } from \"./environment\";\nimport BaseApi from \"./base.api\";\nimport errorService from './error.api';\nimport mockProducts from '../static/products.json';\nimport mockAvailabilities from '../static/availabilities.json';\n\nconst PRODUCTS_API_URL = 'https://www.adidas.com/api/products/'\n\nconst ProductsApi = (path?: string, options = {}) => {\n  const url = `${PRODUCTS_API_URL}${path}`;\n\n  return fetch(url, options)\n    .then(response => response.json())\n    .catch(error => {\n      errorService.reportError(error);\n    });\n};\n\nconst MockProductsApi = (path?: string, options = {}) => {\n  const url = `${PRODUCTS_API_URL}${path}`;\n\n  console.log(`Calling mock ${url} with options`, options);\n\n  return new Promise(\n    resolve => {\n      window.setTimeout(() => {\n        if (path?.includes('availability')) {\n          const productId = path.split('/')?.[0];\n          const productAvailability = mockAvailabilities.find(product => product.id === productId);\n\n          resolve(productAvailability);\n        } else {\n          const productId = path;\n          const product = mockProducts.find(product => product.id === productId);\n          resolve(product);\n        }\n      }, Math.random() * 1000 + 1000);\n    }\n  );\n};\n\nclass ProductsService extends BaseApi {\n  get(productId: string) {\n    return this.api(productId);\n  }\n\n  checkAvailability(productId: string) {\n    return this.api(`${productId}/availability`);\n  }\n}\n\nexport default new ProductsService(isDevelopment() ? MockProductsApi : ProductsApi);\n","import React from \"react\";\nimport { Basket } from \"./models/basket\";\n\nconst DEFAULT_CONTEXT = {\n  cart: {} as Basket,\n  setCart: (cart: Basket) => {},\n};\n\nconst CartContext = React.createContext(DEFAULT_CONTEXT);\n\nexport default CartContext;\n","import { isDevelopment } from \"./environment\";\nimport BaseApi from \"./base.api\";\nimport errorService from './error.api';\nimport { BasketModification } from \"../models/basketModification\";\nimport { ProductToAdd } from \"../models/productToAdd\";\nimport { Basket } from \"../models/basket\";\nimport mockEmptyBasket from '../static/emptyBasket.json';\nimport productsApi from \"./products.api\";\nimport { ProductLineItem } from \"../models/productLineItem\";\nimport { Shipment } from \"../models/shipment\";\n\nconst BASKETS_API_URL = 'https://www.adidas.com/api/checkout/baskets/'\nconst BASKET_ID_KEY_NAME = 'basketId';\nconst BASKET_KEY_NAME = 'basket';\n\nconst BasketsApi = (path?: string, options = {} as any) => {\n  const url = `${BASKETS_API_URL}${path}`;\n\n  return fetch(url, options)\n    .then(response => response.json())\n    .catch(error => {\n      errorService.reportError(error);\n    });\n};\n\nconst MockBasketsApi = (path?: string, options = {} as any) => {\n  const url = `${BASKETS_API_URL}${path}`;\n\n  console.log(`Calling mock ${url} with options`, options)\n\n  return new Promise(\n    resolve => {\n      window.setTimeout(() => {\n        const basketString = localStorage.getItem(BASKET_KEY_NAME);\n        const storedBasket = JSON.parse(basketString || '{}');\n\n        if (path?.includes('items') && options?.method?.includes('POST')) {\n          storedBasket.shipmentList = storedBasket?.shipmentList || [{\n            shipmentId: 'me',\n            shipmentType: 'inline',\n            productLineItemList: []\n          }];\n\n          storedBasket.shipmentList[0].productLineItemList = storedBasket?.shipmentList[0]?.productLineItemList || [];\n\n          const body = JSON.parse(options?.body || '[]');\n          const { products } = body;\n\n          products?.forEach(async (productToAdd: any) => {\n            const sku = productToAdd?.productId;\n            const productId = sku.split('_')[0];\n\n            const product = await productsApi.get(productId);\n            const productTotal = product.pricing_information.currentPrice * productToAdd.quantity;\n\n            const availabilityProduct = await productsApi.checkAvailability(productId);\n\n            const { availability, size } = availabilityProduct?.variation_list?.find((variation: any) => variation.sku === sku);\n\n            const productLineItem = {\n              ...productToAdd,\n              productName: product?.name,\n              \"canonicalProductName\": \"d-rose-x-bleacher-report---d-rose-park-fleece-hoodie\",\n              \"productImage\": product?.view_list?.[0]?.image_url,\n              \"pricing\": {\n                \"baseUnitPrice\": product?.pricing_information?.currentPrice,\n                \"unitPrice\": product?.pricing_information?.currentPrice,\n                \"basePrice\": product?.pricing_information?.currentPrice,\n                \"price\": product?.pricing_information?.currentPrice,\n                \"priceAfterAllDiscounts\": product?.pricing_information?.currentPrice,\n                \"unitPriceWithoutTax\": product?.pricing_information?.currentPrice\n              },\n              \"gender\": product?.attribute_list?.gender,\n              \"color\": product?.attribute_list?.color,\n              \"size\": size,\n              \"allowedActions\": {\n                \"delete\": true,\n                \"edit\": true,\n                \"moveToWishlist\": true\n              },\n              \"maxQuantityAllowed\": availability,\n              \"isBonusProduct\": false,\n              \"productType\": product?.product_type?.toUpperCase(),\n              \"availableStock\": availability,\n              \"lastAdded\": true,\n              \"isFlashProduct\": false\n            } as ProductLineItem;\n\n            storedBasket?.shipmentList[0]?.productLineItemList?.push(productLineItem);\n            storedBasket.pricing.total = storedBasket.pricing.total + productTotal;\n            localStorage.setItem(BASKET_KEY_NAME, JSON.stringify(storedBasket));\n          });\n\n          resolve(storedBasket);\n        } else if (path?.includes('items') && options?.method?.includes('DELETE')) {\n          const pathArray = path.split('/');\n          const productId = pathArray[pathArray.length - 1];\n\n          storedBasket.shipmentList.forEach((shipmentElement: Shipment) => {\n            shipmentElement.productLineItemList.forEach((productLineItem: ProductLineItem, index: number, ) => {\n              if (productLineItem.productId === productId) {\n                const productTotal = productLineItem.pricing.price * productLineItem.quantity;\n                const basketTotal = storedBasket.pricing.total - productTotal;\n                shipmentElement.productLineItemList.splice(index, 1)\n\n                storedBasket.pricing.total = Math.max(basketTotal, 0);\n              }\n            });\n          });\n\n          localStorage.setItem(BASKET_KEY_NAME, JSON.stringify(storedBasket));\n          resolve(storedBasket);\n        } else if (path?.includes('items') && options?.method?.includes('PATCH')) {\n          // TODO: IMPLEMENT\n\n          resolve(storedBasket);\n        } else if (options?.method?.includes('POST')) {\n          localStorage.setItem(BASKET_KEY_NAME, JSON.stringify(mockEmptyBasket));\n          resolve(mockEmptyBasket);\n        } else if (options?.method?.includes('DELETE')) {\n          localStorage.removeItem(BASKET_ID_KEY_NAME);\n          localStorage.removeItem(BASKET_KEY_NAME);\n          resolve({});\n        } else if (options?.method?.includes('PATCH')) {\n          // TODO: IMPLEMENT\n\n          resolve(storedBasket);\n        } else {\n          if (!storedBasket?.basketId) {\n            resolve(mockEmptyBasket);\n          }\n          resolve(storedBasket);\n        }\n      }, Math.random() * 1000 + 1000);\n    }\n  );\n};\n\nclass BasketsService extends BaseApi {\n  getId() {\n    const basketId = localStorage.getItem(BASKET_ID_KEY_NAME);\n\n    if (!basketId) {\n      this.create();\n    }\n\n    return basketId || '';\n  }\n\n  get(basketId: string): Promise<Basket> {\n    return this.api(basketId);\n  }\n\n  async create(): Promise<Basket> {\n    const options = {\n      method: 'POST',\n    };\n\n    const response = await this.api('', options);\n    localStorage.setItem(BASKET_ID_KEY_NAME, response.basketId);\n\n    return response;\n  }\n\n  async delete(basketId: string): Promise<string> {\n    const options = {\n      method: 'DELETE',\n    };\n\n    const response = await this.api(basketId, options);\n    localStorage.removeItem(BASKET_ID_KEY_NAME);\n    localStorage.removeItem(BASKET_KEY_NAME);\n    return response;\n  }\n\n  update(basketId: string, parameters: BasketModification): Promise<Basket> {\n    const options = {\n      method: 'PATCH',\n      body: JSON.stringify({\n        product: parameters,\n      }),\n    };\n\n    return this.api(basketId, options);\n  }\n\n  addProduct(basketId: string, product: ProductToAdd): Promise<Basket> {\n    const options = {\n      method: 'POST',\n      body: JSON.stringify({\n        products: [product],\n      }),\n    };\n\n    return this.api(`${basketId}/items/`, options);\n  }\n\n  removeProduct(basketId: string, productId: string): Promise<Basket> {\n    const options = {\n      method: 'DELETE',\n    };\n\n    return this.api(`${basketId}/items/${productId}`, options);\n  }\n\n  updateProduct(basketId: string, productId: string, product: ProductToAdd): Promise<Basket> {\n    const options = {\n      method: 'PATCH',\n      body: JSON.stringify({\n        product: product,\n      }),\n    };\n\n    return this.api(`${basketId}/items/${productId}`, options);\n  }\n}\n\nexport default new BasketsService(isDevelopment() ? MockBasketsApi : BasketsApi);\n","import React, { FunctionComponent, DetailedHTMLProps, ImgHTMLAttributes, useRef, useEffect } from 'react';\n\n\ninterface ILazyLoadImageProps extends DetailedHTMLProps<ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement> {\n  loading: string;\n}\n\nconst LazyLoadImage: FunctionComponent<ILazyLoadImageProps> = props => {\n  const element = useRef({} as any);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver((entries, observer) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          element.current.src = element?.current?.dataset?.src;\n          observer.disconnect();\n        }\n      });\n    });\n\n    observer.observe(element.current as Element);\n  }, [props]);\n\n  const { src, alt, ...rest } = props\n\n  return <img {...rest} data-src={src} alt={alt} ref={element} />;\n};\n\nexport default LazyLoadImage;\n","import React, { FunctionComponent, useEffect, useState, useContext, useRef } from 'react';\nimport './ProductItem.scss';\nimport { Product } from '../../models/product';\nimport productsApi from '../../services/products.api';\nimport CartContext from '../../CartContext';\nimport basketsApi from '../../services/baskets.api';\nimport { Basket } from '../../models/basket';\nimport LazyLoadImage from '../LazyLoadImage';\n\ninterface IProductItemProps {\n  product: Product;\n}\n\nconst ProductItem: FunctionComponent<IProductItemProps> = props => {\n  const element = useRef({} as any);\n\n  const { setCart } = useContext(CartContext);\n\n  const [price, setPrice] = useState(0);\n  const [availability, setAvailability] = useState({\n    availability_status: '',\n    variation_list: [] as any[],\n    selectedElement: {\n      sku: '',\n      quantity: 0,\n      maxQuantity: 0,\n    },\n  });\n\n  useEffect(() => {\n    let isSubscribed = true;\n\n    const observer = new IntersectionObserver((entries, observer) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          productsApi.get(props?.product?.productId)\n            .then((response) => {\n              if (isSubscribed) {\n                setPrice(response?.pricing_information?.currentPrice);\n              }\n            });\n\n          productsApi.checkAvailability(props?.product?.productId)\n            .then((response) => {\n              if (isSubscribed) {\n                setAvailability({\n                  availability_status: response?.availability_status,\n                  variation_list: response?.variation_list,\n                  selectedElement: {\n                    sku: '',\n                    quantity: 0,\n                    maxQuantity: 0,\n                  },\n                });\n              }\n            });\n\n          observer.disconnect();\n        }\n      });\n    });\n\n    observer.observe(element.current as Element);\n\n    return () => { isSubscribed = false };\n  }, [props]);\n\n  const handleChangeSize = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const index = Number(event?.target?.value);\n    const element = availability?.variation_list[index];\n\n    setAvailability((prevState) => ({\n      ...prevState,\n      selectedElement: {\n        ...prevState?.selectedElement,\n        sku: element?.sku,\n        maxQuantity: element?.availability,\n      },\n    }));\n  };\n\n  const handleChangeQuantity = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const quantity = Number(event?.target?.value);\n\n    setAvailability((prevState) => ({\n      ...prevState,\n      selectedElement: {\n        ...prevState?.selectedElement,\n        quantity: quantity,\n      },\n    }));\n  };\n\n  const handleAddTocart = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (validateFields()) {\n      const { selectedElement } = availability;\n\n      const basketId = basketsApi.getId();\n\n      basketsApi.addProduct(basketId, {\n        productId: selectedElement.sku,\n        quantity: selectedElement.quantity,\n      }).then((response: Basket) => {\n        setCart({\n          ...response,\n        });\n      });\n    }\n  }\n\n  const validateFields = () => {\n    const { selectedElement } = availability\n\n    if (selectedElement?.quantity <= selectedElement.maxQuantity && selectedElement?.sku && selectedElement?.quantity > 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  return (\n    <>\n      {\n        props?.product?.productId && props?.product?.displayName && (\n          <li className=\"product-item\" ref={element}>\n            <div className=\"product-item__container\">\n              <div className=\"image__container\">\n                <LazyLoadImage className=\"image\" src={props?.product?.image?.src} alt={props?.product?.displayName} loading=\"lazy\" />\n              </div>\n              <div>\n                <span>{props?.product?.division}</span>\n                <h3 title={props?.product?.displayName}>{props?.product?.displayName.replace(/\\s/g, ' ')}</h3>\n                <p>{price > 0 ? `Price: $${price}` : 'Loading...'}</p>\n              </div>\n              <form onSubmit={handleAddTocart}>\n                <div>\n                  <label>\n                    Choose a size:\n                    <select onChange={handleChangeSize} required>\n                      <option value=\"\"></option>\n                      {\n                        availability?.variation_list?.map((variation: any, index: number) => (\n                          <option value={index} disabled={variation?.availability_status === 'NOT_AVAILABLE'} key={index}>\n                            {variation?.size}\n                          </option>\n                        ))\n                      }\n                    </select>\n                  </label>\n                </div>\n                <div>\n                  <label>\n                    Quantity:\n                    <input type=\"number\" min=\"0\" max={availability?.selectedElement?.maxQuantity} value={availability?.selectedElement?.quantity} onChange={handleChangeQuantity} required />\n                  </label>\n                </div>\n                <div>\n                  <button type=\"submit\" className=\"button\" disabled={!validateFields()}>Add to cart</button>\n                </div>\n              </form>\n            </div>\n          </li>\n        )\n      }\n    </>\n  );\n};\n\nexport default ProductItem;\n","import React, { FunctionComponent } from 'react';\nimport ProductItem from '../ProductItem/ProductItem';\nimport './ProductList.scss';\nimport { Product } from '../../models/product';\n\ninterface IProductListProps {\n  products: Product[];\n}\n\nconst ProductList: FunctionComponent<IProductListProps> = props => (\n  <div className=\"product-list__container\">\n    <h4>{props?.products?.length} Products</h4>\n    <ul className=\"product-list\">\n      {\n        props?.products?.map((product) => (\n          <ProductItem product={product} key={product?.productId} />\n        ))\n      }\n    </ul>\n  </div>\n);\n\nexport default ProductList;\n","import React from \"react\";\nimport { Product } from \"./models/product\";\n\nconst DEFAULT_CONTEXT = {\n  products: [] as Product[],\n  setProducts: (products: Product[]) => {},\n};\n\nconst ProductsContext = React.createContext(DEFAULT_CONTEXT);\n\nexport default ProductsContext;\n","import React, { useContext } from 'react';\nimport ProductList from '../components/ProductList/ProductList';\nimport ProductsContext from '../ProductsContext';\nimport './Products.scss';\n\nfunction Products() {\n  const { products } = useContext(ProductsContext);\n\n  return (\n    <div className=\"products\">\n      <h1>Products Page</h1>\n      <ProductList products={products} />\n    </div>\n  );\n};\n\nexport default Products;\n","import React, { FunctionComponent, useEffect, useState, useContext } from 'react';\nimport './ProductCartItem.scss';\nimport productsApi from '../../services/products.api';\nimport CartContext from '../../CartContext';\nimport basketsApi from '../../services/baskets.api';\nimport { ProductLineItem } from '../../models/productLineItem';\nimport LazyLoadImage from '../LazyLoadImage';\n\ninterface IProductCartItemProps {\n  product: ProductLineItem;\n}\n\nconst ProductCartItem: FunctionComponent<IProductCartItemProps> = props => {\n  const { setCart } = useContext(CartContext);\n\n  const [price, setPrice] = useState(0);\n\n  useEffect(() => {\n    let isSubscribed = true;\n\n    if (props?.product?.pricing?.price) {\n      setPrice(props?.product?.pricing?.price);\n    } else {\n      productsApi.get(props?.product?.productId)\n        .then((response) => {\n          if (isSubscribed) {\n            setPrice(response?.pricing_information?.currentPrice);\n          }\n        });\n      }\n\n    return () => { isSubscribed = false };\n  }, [props]);\n\n  const handleRemoveFromCart = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    basketsApi.removeProduct(basketsApi.getId(), props?.product?.productId).then((response) => {\n      setCart({\n        ...response\n      });\n    });\n  }\n\n  return (\n    <>\n      {\n        props?.product?.productId && props?.product?.productName && (props?.product?.quantity || 0) > 0 && (props?.product?.availableStock || 0) > 0 && (\n          <li className=\"product-cart-item\">\n            <div className=\"product-cart-item__container\">\n              <div className=\"image__container\">\n                <LazyLoadImage className=\"image\" src={props?.product?.productImage} alt={props?.product?.productName} loading=\"lazy\" />\n              </div>\n              <div className=\"text__container\">\n                <div>\n                  <h3 title={props?.product?.productName} className=\"no-margin\">{props?.product?.productName.replace(/\\s/g, ' ')}</h3>\n                  <h3 title={props?.product?.color} className=\"no-margin\">{props?.product?.color.replace(/\\s/g, ' ')}</h3>\n                  <p>{price > 0 ? `$${price.toFixed(2)}` : 'Loading...'}</p>\n                </div>\n                <form onSubmit={handleRemoveFromCart}>\n                  <div>\n                    <label>\n                      SIZE: {props?.product?.size}\n                    </label>\n                  </div>\n                  <div>\n                    <label aria-label=\"Quantity\">\n                      <input type=\"number\" value={props?.product?.quantity} disabled />\n                    </label>\n                  </div>\n                  <div>\n                    <button type=\"submit\" className=\"button\" aria-label=\"Remove from cart\">&#215;</button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </li>\n        )\n      }\n    </>\n  );\n};\n\nexport default ProductCartItem;\n","import React, { useContext } from 'react';\nimport ProductCartItem from '../ProductCartItem/ProductCartItem';\nimport './ProductCartList.scss';\nimport CartContext from '../../CartContext';\n\nfunction ProductCartList() {\n  const { cart } = useContext(CartContext);\n  const products = cart?.shipmentList?.[0]?.productLineItemList;\n\n  return (\n    <div className=\"product-cart-list__container\">\n      <ul className=\"product-cart-list\">\n        {\n          products?.map((product, index) => (\n            <ProductCartItem product={product} key={`${product?.productId}-${index}`} />\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n\nexport default ProductCartList;\n","import React, { FunctionComponent } from 'react';\nimport './CheckoutButton.scss';\n\ninterface ICheckoutButtonProps {\n  buttonClickHandler: () => void;\n}\n\nconst CheckoutButton: FunctionComponent<ICheckoutButtonProps> = props => (\n  <div className=\"checkout-button__container\">\n    <button className=\"checkout-button\" onClick={props.buttonClickHandler}>Go to checkout</button>\n  </div>\n);\n\nexport default CheckoutButton;\n","import React, { useContext } from 'react';\nimport './Cart.scss';\nimport ProductCartList from '../ProductCartList/ProductCartList';\nimport CheckoutButton from '../CheckoutButton/CheckoutButton';\nimport CartContext from '../../CartContext';\nimport basketsApi from '../../services/baskets.api';\nimport { Basket } from '../../models/basket';\n\nfunction Cart() {\n  const { cart, setCart } = useContext(CartContext);\n\n  const buttonClickHandler = () => {\n    const basketId = basketsApi.getId();\n\n    if (basketId) {\n      basketsApi.delete(basketId).then(() => {\n        setCart({} as Basket);\n      });\n    }\n  }\n\n  const products = cart?.shipmentList?.[0]?.productLineItemList;\n\n  return (\n    <div className=\"cart__container\">\n      <h4>TOTAL: ({products?.length || 0} item{products?.length !== 1 ? 's' : ''}) <span>${cart?.currency}{cart?.pricing?.total || 0}</span></h4>\n      <div className=\"cart\">\n        <div className=\"cart__left\">\n          <ProductCartList />\n          <CheckoutButton buttonClickHandler={buttonClickHandler} />\n        </div>\n        <div className=\"cart__right\">\n          <CheckoutButton buttonClickHandler={buttonClickHandler} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Cart;\n","import React from 'react';\nimport Cart from '../components/Cart/Cart';\n\nfunction ShoppingCart() {\n  return (\n    <div className=\"shoppingCart\">\n      <h1>Your bag</h1>\n      <Cart />\n    </div>\n  );\n};\n\nexport default ShoppingCart;\n","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport CartContext from './CartContext';\nimport { Basket } from './models/basket';\nimport basketsApi from './services/baskets.api';\n\nconst CartProvider: FunctionComponent = props => {\n  const [cart, setCart] = useState({} as Basket);\n\n  useEffect(() => {\n    let isSubscribed = true;\n    const basketId = basketsApi.getId();\n\n    if (basketId) {\n      basketsApi.get(basketId).then((response: Basket) => {\n        if (isSubscribed) {\n          setCart({\n            ...response,\n          } as Basket);\n        }\n      });\n    }\n\n    return () => { isSubscribed = false };\n  }, [])\n\n  const value = { cart, setCart };\n\n  return (\n    <CartContext.Provider value={value}>\n      { props.children }\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n","import { isDevelopment } from \"./environment\";\nimport BaseApi from \"./base.api\";\nimport errorService from './error.api';\nimport mockTaxonomyJson from '../static/searchTaxonomy.json';\nimport mockProductJson from '../static/searchProduct.json';\nimport { Product } from \"../models/product\";\n\nconst SEARCH_API_URL = 'https://www.adidas.com/api/search/'\n\nconst SearchApi = (path?: string, options = {}) => {\n  const url = `${SEARCH_API_URL}${path}`;\n\n  return fetch(url, options)\n    .then(res => res.json())\n    .catch(error => {\n      errorService.reportError(error);\n    });\n};\n\nconst MockSearchApi = (path?: string, options = {}) => {\n  const url = `${SEARCH_API_URL}${path}`;\n\n  console.log(`Calling mock ${url} with options`, options);\n\n  return new Promise(\n    resolve => {\n      window.setTimeout(() => {\n        if (path?.includes('tf')) {\n          resolve(mockTaxonomyJson);\n        } else if (path?.includes('product')) {\n          resolve(mockProductJson);\n        }\n      }, Math.random() * 1000 + 1000);\n    }\n  );\n};\n\nclass SearchService extends BaseApi {\n  getProducts(): Promise<{ itemList: { items: Product[] } }> {\n    const queryParams = '?sitePath=us&query=men-shoes-new_arrivals'\n    const path = `tf/taxonomy${queryParams}`;\n    return this.api(path);\n  }\n\n  getProduct(productId: string): Promise<{ price: number }> {\n    const queryParams = '?sitePath=us'\n    const path = `product/${productId}${queryParams}`;\n    return this.api(path);\n  }\n}\n\nexport default new SearchService(isDevelopment() ? MockSearchApi : SearchApi);\n","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport searchApi from './services/search.api';\nimport { Product } from './models/product';\nimport ProductsContext from './ProductsContext';\n\nconst ProductsProvider: FunctionComponent = props => {\n  const [products, setProducts] = useState([] as Product[]);\n\n  useEffect(() => {\n    let isSubscribed = true;\n\n    searchApi.getProducts()\n      .then((response) => {\n        const products = response?.itemList?.items as Product[];\n\n        if (isSubscribed) {\n          setProducts(products);\n        }\n      })\n\n    return () => { isSubscribed = false };\n  }, []);\n\n  const value = { products, setProducts };\n\n  return (\n    <ProductsContext.Provider value={value}>\n      {props.children}\n    </ProductsContext.Provider>\n  );\n};\n\nexport default ProductsProvider;\n","import React from 'react';\nimport { BrowserRouter, Switch } from 'react-router-dom';\nimport Page from './components/Page';\nimport Navigation from './components/Navigation/Navigation';\nimport Products from './pages/Products';\nimport ShoppingCart from './pages/ShoppingCart';\nimport CartProvider from './CartProvider';\nimport ProductsProvider from './ProductsProvider';\n\nfunction AppRouter() {\n  return (\n    <BrowserRouter>\n      <CartProvider>\n        <Navigation />\n        <main>\n            <Switch>\n              <Page path=\"/cart\" component={ShoppingCart} title=\"Shopping Cart\" />\n              <ProductsProvider>\n                <Page path=\"/\" component={Products} title=\"Index\" />\n              </ProductsProvider>\n            </Switch>\n        </main>\n      </CartProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default AppRouter;\n","import React from 'react';\nimport AppRouter from './AppRouter';\n\nfunction App() {\n  return (\n    <AppRouter />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css/normalize.css';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}